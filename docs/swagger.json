{
    "swagger": "2.0",
    "info": {
        "description": "Backend RestAPI for Tumbleweeds project",
        "title": "Tumbleweeds Api Gateway",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Trung Hieu Nguyen",
            "email": "hieunguyen6694@gmail.com"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Get tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.Login"
                        }
                    },
                    {
                        "description": "Password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/responses.Token"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "user credential not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "password is invalid",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Provide new access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Refresh token",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "refreshToken",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.Refresh"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/responses.Token"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "claim not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "token has been revoked",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Create new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "Display Name",
                        "name": "displayName",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.Register"
                        }
                    },
                    {
                        "description": "Email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.Register"
                        }
                    },
                    {
                        "description": "Password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.Register"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/responses.User"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "unable to encrypt password",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/auth/revoke": {
            "post": {
                "description": "Invalidate tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Revoke token",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "refreshToken",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.Revoke"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/responses.Token"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "claim not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "token has been revoked",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games": {
            "get": {
                "description": "Find games by limit by offset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get game pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/responses.GamePagination"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/": {
            "post": {
                "description": "Create new game",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create game",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/responses.GameDetail"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}": {
            "get": {
                "description": "Get game by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/responses.GameDetail"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "game not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/build-road": {
            "post": {
                "description": "build road by using resource cards at resource consumption phase",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Build road",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Path ID",
                        "name": "pathID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.BuildRoad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "path not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "you run out of roads",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/build-settlement": {
            "post": {
                "description": "build settlement by using resource cards at resource consumption phase",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Build settlement",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Land ID",
                        "name": "landID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.BuildSettlement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "land not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "you run out of settlements",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/build-settlement-and-road": {
            "post": {
                "description": "Build settlement and road at setup phase",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Build settlement and road",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Land ID",
                        "name": "landID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.BuildSettlementAndRoad"
                        }
                    },
                    {
                        "description": "Path ID",
                        "name": "pathID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.BuildSettlementAndRoad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "path not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "you run out of roads",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/buy-development-card": {
            "post": {
                "description": "Buy development by using resource cards at resource consumption phase",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Buy development",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "game run out of development cards",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/cancel-trade-offer": {
            "post": {
                "description": "Cancel trade offer of active player at resource consumption phase",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Cancel trade offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "player not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "you have not received any offer",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/confirm-trade-offer": {
            "post": {
                "description": "Confirm exchanging offering resource cards with active player at resource consumption phase",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Confirm trade offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "player not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "active player must offer at least one resource card",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/discard-resource-cards": {
            "post": {
                "description": "Discard resource cards by half when handling more than 7 resource cards at resource discard phase",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Discard resource cards",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of Resource Card ID",
                        "name": "resourceCardIDs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.BuildSettlementAndRoad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "player not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "selected resource cards must be equals to half of your currently resource cards",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/end-turn": {
            "post": {
                "description": "End current turn at resource consumption phase",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "End turn",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "player not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "you are not in turn",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/join": {
            "post": {
                "description": "Join game at waiting state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Join game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "game already finished",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/maritime-trade": {
            "post": {
                "description": "Exchange your offering resource cards with selected one on the table at resource consumption phase, all of the offering resource cards will be exchange with the lowest ratio in case of owning harbors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Maritime trade",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Resource Card Type",
                        "name": "resourceCardType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.MaritimeTrade"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "game has insufficient resource cards",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/move-robber": {
            "post": {
                "description": "Move robber and steal resource card if robber placed on terrain which has enemy construction nearby at robbing phase",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Move robber",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Terrain ID",
                        "name": "terrainID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.MoveRobber"
                        }
                    },
                    {
                        "description": "Player ID",
                        "name": "playerID",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/requests.MoveRobber"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "player not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "selected player must have construction next to robber",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/play-knight-card": {
            "post": {
                "description": "Play knight development card from your stack at any phase of started state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Play knight card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Terrain ID",
                        "name": "terrainID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.PlayKnightCard"
                        }
                    },
                    {
                        "description": "Player ID",
                        "name": "playerID",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/requests.PlayKnightCard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "player not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "selected player must have construction next to robber",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/play-monopoly-card": {
            "post": {
                "description": "Play monopoly development card from your stack at any phase of started state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Play monopoly card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Resource Card Type",
                        "name": "resourceCardType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.PlayMonopolyCard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "development card not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "selected player must have construction next to robber",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/play-road-building-card": {
            "post": {
                "description": "Play road building development card from your stack at any phase of started state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Play road building card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of Path ID",
                        "name": "pathIDs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.PlayRoadBuildingCard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "path not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "you run out of roads",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/play-year-of-plenty-card": {
            "post": {
                "description": "Play year of plenty development card from your stack at any phase of started state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Play year of plenty card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of Resource Card Type",
                        "name": "resourceCardTypes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.PlayYearOfPlentyCard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "development card not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "game has insufficient resource cards",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/roll-dices": {
            "post": {
                "description": "Roll dices at resource production phase",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Roll dices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "you are not in turn",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/send-trade-offer": {
            "post": {
                "description": "Offer other player to exchange their offering resource cards at resource consumption phase",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Send trade offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Player ID",
                        "name": "playerID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SendTradeOffer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "player not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "selected player must offer at least one resource card",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/start": {
            "post": {
                "description": "Start game at waiting state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Start game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "game already finished",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/toggle-resource-cards": {
            "post": {
                "description": "Turn selected resource card into offer/unoffer at resource consumption phase, the offering resource card will be showed up to other players and it will be used to trade with maritime or other players",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Toggle resource cards",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of Resource Card ID",
                        "name": "resourceCardIDs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ToggleResourceCards"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "resource card not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "you are unable to perform this action in robbing phase",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/catan/games/{id}/upgrade-city": {
            "post": {
                "description": "upgrade your settlement to city by using resource cards at resource consumption phase",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Upgrade city",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Construction ID",
                        "name": "constructionID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpgradeCity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "nil"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "404": {
                        "description": "construction not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "you run out of cities",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/chat/messages": {
            "get": {
                "description": "Find messages by room id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Find messages",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Message"
                            }
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create message",
                "responses": {
                    "201": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/responses.Message"
                        }
                    },
                    "400": {
                        "description": "the request contains invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "description": "Get user by user credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get authorized user",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/responses.User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/responses.User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    },
                    "422": {
                        "description": "ID must be a valid ObjectID",
                        "schema": {
                            "$ref": "#/definitions/iris.Problem"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "iris.Problem": {
            "type": "object",
            "additionalProperties": true
        },
        "requests.BuildRoad": {
            "type": "object",
            "required": [
                "pathID"
            ],
            "properties": {
                "pathID": {
                    "type": "string"
                }
            }
        },
        "requests.BuildSettlement": {
            "type": "object",
            "required": [
                "landID"
            ],
            "properties": {
                "landID": {
                    "type": "string"
                }
            }
        },
        "requests.BuildSettlementAndRoad": {
            "type": "object",
            "required": [
                "landID",
                "pathID"
            ],
            "properties": {
                "landID": {
                    "type": "string"
                },
                "pathID": {
                    "type": "string"
                }
            }
        },
        "requests.Login": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "requests.MaritimeTrade": {
            "type": "object",
            "properties": {
                "resourceCardType": {
                    "type": "string"
                }
            }
        },
        "requests.MoveRobber": {
            "type": "object",
            "required": [
                "terrainID"
            ],
            "properties": {
                "playerID": {
                    "type": "string"
                },
                "terrainID": {
                    "type": "string"
                }
            }
        },
        "requests.PlayKnightCard": {
            "type": "object",
            "required": [
                "terrainID"
            ],
            "properties": {
                "playerID": {
                    "type": "string"
                },
                "terrainID": {
                    "type": "string"
                }
            }
        },
        "requests.PlayMonopolyCard": {
            "type": "object",
            "properties": {
                "resourceCardType": {
                    "type": "string"
                }
            }
        },
        "requests.PlayRoadBuildingCard": {
            "type": "object",
            "required": [
                "pathIDs"
            ],
            "properties": {
                "pathIDs": {
                    "type": "array",
                    "maxItems": 2,
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "requests.PlayYearOfPlentyCard": {
            "type": "object",
            "required": [
                "resourceCardTypes"
            ],
            "properties": {
                "resourceCardTypes": {
                    "type": "array",
                    "maxItems": 2,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "requests.Refresh": {
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "requests.Register": {
            "type": "object",
            "required": [
                "displayName",
                "email",
                "password"
            ],
            "properties": {
                "displayName": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "requests.Revoke": {
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "requests.SendTradeOffer": {
            "type": "object",
            "required": [
                "playerID"
            ],
            "properties": {
                "playerID": {
                    "type": "string"
                }
            }
        },
        "requests.ToggleResourceCards": {
            "type": "object",
            "required": [
                "resourceCardIDs"
            ],
            "properties": {
                "resourceCardIDs": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "requests.UpgradeCity": {
            "type": "object",
            "properties": {
                "constructionID": {
                    "type": "string"
                }
            }
        },
        "responses.Achievement": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "responses.Construction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "land": {
                    "$ref": "#/definitions/responses.Land"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "responses.DevelopmentCard": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "responses.Dice": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                }
            }
        },
        "responses.Game": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "playerQuantity": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "responses.GameDetail": {
            "type": "object",
            "properties": {
                "achievements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Achievement"
                    }
                },
                "activePlayer": {
                    "$ref": "#/definitions/responses.Player"
                },
                "developmentCards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.DevelopmentCard"
                    }
                },
                "dices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Dice"
                    }
                },
                "id": {
                    "type": "string"
                },
                "lands": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Land"
                    }
                },
                "paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Path"
                    }
                },
                "phase": {
                    "type": "string"
                },
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Player"
                    }
                },
                "resourceCards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.ResourceCard"
                    }
                },
                "status": {
                    "type": "string"
                },
                "terrains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Terrain"
                    }
                },
                "turn": {
                    "type": "integer"
                }
            }
        },
        "responses.GamePagination": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Game"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.Harbor": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "q": {
                    "type": "integer"
                },
                "r": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "responses.Land": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "q": {
                    "type": "integer"
                },
                "r": {
                    "type": "integer"
                }
            }
        },
        "responses.Message": {
            "type": "object",
            "properties": {
                "Detail": {
                    "type": "string"
                },
                "ID": {
                    "type": "string"
                },
                "RoomID": {
                    "type": "string"
                },
                "UserID": {
                    "type": "string"
                }
            }
        },
        "responses.Path": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "q": {
                    "type": "integer"
                },
                "r": {
                    "type": "integer"
                }
            }
        },
        "responses.Player": {
            "type": "object",
            "properties": {
                "achievements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Achievement"
                    }
                },
                "color": {
                    "type": "string"
                },
                "constructions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Construction"
                    }
                },
                "developmentCards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.DevelopmentCard"
                    }
                },
                "discardedResources": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "receivedOffer": {
                    "type": "boolean"
                },
                "resourceCards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.ResourceCard"
                    }
                },
                "roads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Road"
                    }
                },
                "score": {
                    "type": "integer"
                },
                "turnOrder": {
                    "type": "integer"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "responses.ResourceCard": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "offering": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "responses.Road": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "path": {
                    "$ref": "#/definitions/responses.Path"
                }
            }
        },
        "responses.Robber": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "responses.Terrain": {
            "type": "object",
            "properties": {
                "harbor": {
                    "$ref": "#/definitions/responses.Harbor"
                },
                "id": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "q": {
                    "type": "integer"
                },
                "r": {
                    "type": "integer"
                },
                "robber": {
                    "$ref": "#/definitions/responses.Robber"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "responses.Token": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "responses.User": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        }
    }
}